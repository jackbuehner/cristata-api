{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "defaultProperties": [],
    "definitions": {
        "AnyObject": {
            "additionalProperties": {},
            "defaultProperties": [],
            "type": "object"
        },
        "CollectionPermissions": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "archive": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "teams": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "users": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "teams",
                        "users"
                    ],
                    "type": "object"
                },
                "bypassDocPermissions": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "teams": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "users": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "teams",
                        "users"
                    ],
                    "type": "object"
                },
                "create": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "teams": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "users": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "teams",
                        "users"
                    ],
                    "type": "object"
                },
                "deactivate": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "teams": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "users": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "teams",
                        "users"
                    ],
                    "type": "object"
                },
                "delete": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "teams": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "users": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "teams",
                        "users"
                    ],
                    "type": "object"
                },
                "get": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "teams": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "users": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "teams",
                        "users"
                    ],
                    "type": "object"
                },
                "hide": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "teams": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "users": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "teams",
                        "users"
                    ],
                    "type": "object"
                },
                "lock": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "teams": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "users": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "teams",
                        "users"
                    ],
                    "type": "object"
                },
                "modify": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "teams": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "users": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "teams",
                        "users"
                    ],
                    "type": "object"
                },
                "publish": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "teams": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "users": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "teams",
                        "users"
                    ],
                    "type": "object"
                },
                "watch": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "teams": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "users": {
                            "items": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            0
                                        ],
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "teams",
                        "users"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "archive",
                "create",
                "delete",
                "get",
                "hide",
                "lock",
                "modify",
                "watch"
            ],
            "type": "object"
        },
        "ColumnDef": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "chips": {
                    "anyOf": [
                        {
                            "items": {
                                "additionalProperties": false,
                                "defaultProperties": [],
                                "properties": {
                                    "color": {
                                        "enum": [
                                            "blue",
                                            "danger",
                                            "green",
                                            "indigo",
                                            "neutral",
                                            "orange",
                                            "primary",
                                            "red",
                                            "success",
                                            "turquoise",
                                            "violet",
                                            "yellow"
                                        ],
                                        "type": "string"
                                    },
                                    "label": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": [
                                            "string",
                                            "number"
                                        ]
                                    }
                                },
                                "required": [
                                    "value"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "description": "Display values in this field as chips."
                },
                "hidden": {
                    "description": "Hide this column",
                    "type": "boolean"
                },
                "label": {
                    "description": "Column label.",
                    "type": "string"
                },
                "order": {
                    "description": "The order in which this column appears (default: -1)",
                    "type": "number"
                },
                "reference": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "Configure this column as a reference to another collection.\n\nThis tells",
                    "properties": {
                        "collection": {
                            "description": "The singular version of the collection name.\n\nIf this is not defined, the app will attempt to use\nthe schema type as the collection name.",
                            "type": "string"
                        },
                        "fields": {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "description": "The fields",
                            "properties": {
                                "_id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "sortable": {
                    "description": "Whether the user can click on the column header to sort the\ncolumn in ascendiing or descending order.\n\nThis should only be enabled when the field is a type that\ncan be sorted in a ascending or descending nature. For\nexample, a field with object ids referencing docs in another\ncollection can be sorted, but it may not sort in a way that\nmakes sense to the user because it would sort by id instead\nof the name field in that document.\n\nDefaults to `false`.",
                    "type": "boolean"
                },
                "width": {
                    "description": "Width of the column in pixels. Defaults to `150`.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Field": {
            "additionalProperties": true,
            "defaultProperties": [],
            "type": "object"
        },
        "FieldDef": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "custom": {
                    "description": "Use a custom set of fields based on the collection's name.\n\nThis only works for a parent field type of JSON.",
                    "items": {
                        "additionalProperties": false,
                        "defaultProperties": [],
                        "properties": {
                            "fields": {
                                "additionalProperties": {
                                    "$ref": "#/definitions/SchemaDef"
                                },
                                "defaultProperties": [],
                                "description": "A set of schema definitions with fields.\n\nEach field should represent a key-value pair in the JSON.",
                                "type": "object"
                            },
                            "name": {
                                "description": "The name of the document that should use the fields\nfrom the `fields` key.\n\nUse `\"default\"` to a provide a default set of fields\nfor when no other match is made.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "fields",
                            "name"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "Field description.",
                    "type": "string"
                },
                "hidden": {
                    "description": "Hide this field",
                    "type": "boolean"
                },
                "label": {
                    "description": "Field label.",
                    "type": "string"
                },
                "options": {
                    "anyOf": [
                        {
                            "items": {
                                "additionalProperties": false,
                                "defaultProperties": [],
                                "properties": {
                                    "disabled": {
                                        "type": "boolean"
                                    },
                                    "label": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "label",
                                    "value"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "additionalProperties": false,
                                "defaultProperties": [],
                                "properties": {
                                    "disabled": {
                                        "type": "boolean"
                                    },
                                    "label": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "label",
                                    "value"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        }
                    ],
                    "description": "Configure this field as a select"
                },
                "order": {
                    "description": "The order in which this field appears (default: -1)",
                    "type": "number"
                },
                "readonly": {
                    "description": "Whether the field is read only",
                    "type": "boolean"
                },
                "reference": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "Configure this field as a reference to another collection.",
                    "properties": {
                        "collection": {
                            "description": "The singular version of the collection name.",
                            "type": "string"
                        },
                        "fields": {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "description": "The fields",
                            "properties": {
                                "_id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "filter": {
                            "additionalProperties": {},
                            "defaultProperties": [],
                            "description": "Filter the query to the collection to exclude non-matching documents\nwith a MongoDB filter query",
                            "properties": {
                                "$and": {
                                    "items": {
                                        "$ref": "#/definitions/FilterQuery<Record<string,unknown>>"
                                    },
                                    "type": "array"
                                },
                                "$comment": {
                                    "type": "string"
                                },
                                "$nor": {
                                    "items": {
                                        "$ref": "#/definitions/FilterQuery<Record<string,unknown>>"
                                    },
                                    "type": "array"
                                },
                                "$or": {
                                    "items": {
                                        "$ref": "#/definitions/FilterQuery<Record<string,unknown>>"
                                    },
                                    "type": "array"
                                },
                                "$text": {
                                    "additionalProperties": false,
                                    "defaultProperties": [],
                                    "properties": {
                                        "$caseSensitive": {
                                            "type": "boolean"
                                        },
                                        "$diacriticSensitive": {
                                            "type": "boolean"
                                        },
                                        "$language": {
                                            "type": "string"
                                        },
                                        "$search": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "$search"
                                    ],
                                    "type": "object"
                                },
                                "$where": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/definitions/Function"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            },
                            "type": "object"
                        },
                        "forceLoadFields": {
                            "description": "Force these fields to be loaded into the CMS state. This is helpful\nfor forcing fields to be available in the data that is provided to\npreview URLs. The fields must be available on the collection that\nis referenced.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "require": {
                            "description": "Require these fields for the found doc to be selectable.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "tiptap": {
                    "$ref": "#/definitions/TiptapOptions",
                    "description": "Configure tiptap for the field.\n\nOnly applies to the field with key 'body'."
                }
            },
            "type": "object"
        },
        "FilterQuery<Record<string,unknown>>": {
            "additionalProperties": false,
            "properties": {}
        },
        "Function": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "arguments": {},
                "caller": {
                    "$ref": "#/definitions/Function"
                },
                "length": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "prototype": {}
            },
            "required": [
                "arguments",
                "caller",
                "length",
                "name",
                "prototype"
            ],
            "type": "object"
        },
        "NestedSchemaDefType": {
            "additionalProperties": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/SchemaDef"
                    },
                    {
                        "$ref": "#/definitions/NestedSchemaDefType"
                    }
                ]
            },
            "defaultProperties": [],
            "type": "object"
        },
        "PipelineStage.AddFields": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$addFields": {
                    "$ref": "#/definitions/Record<string,any>",
                    "description": "[`$addFields` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/addFields/)"
                }
            },
            "required": [
                "$addFields"
            ],
            "type": "object"
        },
        "PipelineStage.Bucket": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$bucket": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "[`$bucket` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/bucket/)",
                    "properties": {
                        "boundaries": {
                            "items": {},
                            "type": "array"
                        },
                        "default": {},
                        "groupBy": {},
                        "output": {
                            "$ref": "#/definitions/Record<string,{$accumulator?:any;$addToSet?:any;$avg?:any;$count?:any;$first?:any;$last?:any;$max?:any;$mergeObjects?:any;$min?:any;$push?:any;$stdDevPop?:any;$stdDevSamp?:any;$sum?:any;}>"
                        }
                    },
                    "required": [
                        "boundaries",
                        "groupBy"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "$bucket"
            ],
            "type": "object"
        },
        "PipelineStage.BucketAuto": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$bucketAuto": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "[`$bucketAuto` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/bucketAuto/)",
                    "properties": {
                        "buckets": {
                            "type": "number"
                        },
                        "granularity": {
                            "enum": [
                                "1-2-5",
                                "E12",
                                "E192",
                                "E24",
                                "E48",
                                "E6",
                                "E96",
                                "POWERSOF2",
                                "R10",
                                "R20",
                                "R40",
                                "R5",
                                "R80"
                            ],
                            "type": "string"
                        },
                        "groupBy": {},
                        "output": {
                            "$ref": "#/definitions/Record<string,{$accumulator?:any;$addToSet?:any;$avg?:any;$count?:any;$first?:any;$last?:any;$max?:any;$mergeObjects?:any;$min?:any;$push?:any;$stdDevPop?:any;$stdDevSamp?:any;$sum?:any;}>_1"
                        }
                    },
                    "required": [
                        "buckets",
                        "groupBy"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "$bucketAuto"
            ],
            "type": "object"
        },
        "PipelineStage.CollStats": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$collStats": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "[`$collStats` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/collStats/)",
                    "properties": {
                        "count": {
                            "properties": {},
                            "type": "object"
                        },
                        "latencyStats": {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "properties": {
                                "histograms": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "queryExecStats": {
                            "properties": {},
                            "type": "object"
                        },
                        "storageStats": {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "properties": {
                                "scale": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "$collStats"
            ],
            "type": "object"
        },
        "PipelineStage.Count": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$count": {
                    "description": "[`$count` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/count/)",
                    "type": "string"
                }
            },
            "required": [
                "$count"
            ],
            "type": "object"
        },
        "PipelineStage.Facet": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$facet": {
                    "$ref": "#/definitions/Record<string,(PipelineStage.AddFields|PipelineStage.Bucket|PipelineStage.BucketAuto|PipelineStage.Count|PipelineStage.GraphLookup|PipelineStage.Group|PipelineStage.Limit|PipelineStage.ListSessions|PipelineStage.Lookup|PipelineStage.Match|PipelineStage.Project|PipelineStage.Redact|PipelineStage.ReplaceRoot|PipelineStage.ReplaceWith|PipelineStage.Sample|PipelineStage.Search|PipelineStage.Set|PipelineStage.SetWindowFields|PipelineStage.Skip|PipelineStage.Sort|PipelineStage.SortByCount|PipelineStage.UnionWith|PipelineStage.Unset|PipelineStage.Unwind)[]>",
                    "description": "[`$facet` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/facet/)"
                }
            },
            "required": [
                "$facet"
            ],
            "type": "object"
        },
        "PipelineStage.GeoNear": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$geoNear": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "[`$geoNear` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/geoNear/)",
                    "properties": {
                        "distanceField": {
                            "type": "string"
                        },
                        "distanceMultiplier": {
                            "type": "number"
                        },
                        "includeLocs": {
                            "type": "string"
                        },
                        "key": {
                            "type": "string"
                        },
                        "maxDistance": {
                            "type": "number"
                        },
                        "minDistance": {
                            "type": "number"
                        },
                        "near": {
                            "anyOf": [
                                {
                                    "additionalProperties": false,
                                    "defaultProperties": [],
                                    "properties": {
                                        "coordinates": {
                                            "items": [
                                                {
                                                    "type": "number"
                                                },
                                                {
                                                    "type": "number"
                                                }
                                            ],
                                            "maxItems": 2,
                                            "minItems": 2,
                                            "type": "array"
                                        },
                                        "type": {
                                            "enum": [
                                                "Point"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "coordinates",
                                        "type"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "items": [
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ],
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array"
                                }
                            ]
                        },
                        "query": {
                            "$ref": "#/definitions/AnyObject"
                        },
                        "spherical": {
                            "type": "boolean"
                        },
                        "uniqueDocs": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "distanceField",
                        "near"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "$geoNear"
            ],
            "type": "object"
        },
        "PipelineStage.GraphLookup": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$graphLookup": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "[`$graphLookup` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/graphLookup/)",
                    "properties": {
                        "as": {
                            "type": "string"
                        },
                        "connectFromField": {
                            "type": "string"
                        },
                        "connectToField": {
                            "type": "string"
                        },
                        "depthField": {
                            "type": "string"
                        },
                        "from": {
                            "type": "string"
                        },
                        "maxDepth": {
                            "type": "number"
                        },
                        "restrictSearchWithMatch": {
                            "$ref": "#/definitions/AnyObject"
                        },
                        "startWith": {}
                    },
                    "required": [
                        "as",
                        "connectFromField",
                        "connectToField",
                        "from",
                        "startWith"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "$graphLookup"
            ],
            "type": "object"
        },
        "PipelineStage.Group": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$group": {
                    "additionalProperties": {
                        "$ref": "#/definitions/{$accumulator?:any;$addToSet?:any;$avg?:any;$count?:any;$first?:any;$last?:any;$max?:any;$mergeObjects?:any;$min?:any;$push?:any;$stdDevPop?:any;$stdDevSamp?:any;$sum?:any;}"
                    },
                    "defaultProperties": [],
                    "description": "[`$group` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/group)",
                    "properties": {
                        "_id": {}
                    },
                    "required": [
                        "_id"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "$group"
            ],
            "type": "object"
        },
        "PipelineStage.IndexStats": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$indexStats": {
                    "description": "[`$indexStats` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/indexStats/)",
                    "properties": {},
                    "type": "object"
                }
            },
            "required": [
                "$indexStats"
            ],
            "type": "object"
        },
        "PipelineStage.Limit": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$limit": {
                    "description": "[`$limit` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/limit/)",
                    "type": "number"
                }
            },
            "required": [
                "$limit"
            ],
            "type": "object"
        },
        "PipelineStage.ListSessions": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$listSessions": {
                    "anyOf": [
                        {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "properties": {
                                "users": {
                                    "items": {
                                        "additionalProperties": false,
                                        "defaultProperties": [],
                                        "properties": {
                                            "db": {
                                                "type": "string"
                                            },
                                            "user": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "db",
                                            "user"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "properties": {
                                "allUsers": {
                                    "enum": [
                                        true
                                    ],
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    ],
                    "description": "[`$listSessions` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/listSessions/)"
                }
            },
            "required": [
                "$listSessions"
            ],
            "type": "object"
        },
        "PipelineStage.Lookup": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$lookup": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "[`$lookup` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/)",
                    "properties": {
                        "as": {
                            "type": "string"
                        },
                        "foreignField": {
                            "type": "string"
                        },
                        "from": {
                            "type": "string"
                        },
                        "let": {
                            "$ref": "#/definitions/Record<string,any>"
                        },
                        "localField": {
                            "type": "string"
                        },
                        "pipeline": {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/definitions/PipelineStage.AddFields"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Bucket"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.BucketAuto"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.CollStats"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Count"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Facet"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.GeoNear"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.GraphLookup"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Group"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.IndexStats"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Limit"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.ListSessions"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Lookup"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Match"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.PlanCacheStats"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Project"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Redact"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.ReplaceRoot"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.ReplaceWith"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Sample"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Set"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.SetWindowFields"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Skip"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Sort"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.SortByCount"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.UnionWith"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Unset"
                                    },
                                    {
                                        "$ref": "#/definitions/PipelineStage.Unwind"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "as",
                        "from"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "$lookup"
            ],
            "type": "object"
        },
        "PipelineStage.Match": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$match": {
                    "$ref": "#/definitions/AnyObject",
                    "description": "[`$match` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/match/)"
                }
            },
            "required": [
                "$match"
            ],
            "type": "object"
        },
        "PipelineStage.Merge": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$merge": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "[`$merge` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/merge/)",
                    "properties": {
                        "into": {
                            "anyOf": [
                                {
                                    "additionalProperties": false,
                                    "defaultProperties": [],
                                    "properties": {
                                        "coll": {
                                            "type": "string"
                                        },
                                        "db": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "coll",
                                        "db"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        },
                        "let": {
                            "$ref": "#/definitions/Record<string,any>"
                        },
                        "on": {
                            "anyOf": [
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        },
                        "whenMatched": {
                            "enum": [
                                "fail",
                                "keepExisting",
                                "merge",
                                "pipeline",
                                "replace"
                            ],
                            "type": "string"
                        },
                        "whenNotMatched": {
                            "enum": [
                                "discard",
                                "fail",
                                "insert"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "into"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "$merge"
            ],
            "type": "object"
        },
        "PipelineStage.Out": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$out": {
                    "anyOf": [
                        {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "properties": {
                                "coll": {
                                    "type": "string"
                                },
                                "db": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "coll",
                                "db"
                            ],
                            "type": "object"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "[`$out` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/out/)"
                }
            },
            "required": [
                "$out"
            ],
            "type": "object"
        },
        "PipelineStage.PlanCacheStats": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$planCacheStats": {
                    "description": "[`$planCacheStats` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/planCacheStats/)",
                    "properties": {},
                    "type": "object"
                }
            },
            "required": [
                "$planCacheStats"
            ],
            "type": "object"
        },
        "PipelineStage.Project": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$project": {
                    "additionalProperties": {},
                    "defaultProperties": [],
                    "description": "[`$project` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/project/)",
                    "properties": {
                        "_id": {
                            "enum": [
                                0,
                                false
                            ]
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "$project"
            ],
            "type": "object"
        },
        "PipelineStage.Redact": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$redact": {
                    "description": "[`$redact` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/redact/)"
                }
            },
            "required": [
                "$redact"
            ],
            "type": "object"
        },
        "PipelineStage.ReplaceRoot": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$replaceRoot": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "[`$replaceRoot` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/replaceRoot/)",
                    "properties": {
                        "newRoot": {}
                    },
                    "required": [
                        "newRoot"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "$replaceRoot"
            ],
            "type": "object"
        },
        "PipelineStage.ReplaceWith": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$replaceWith": {
                    "description": "[`$replaceWith` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/replaceWith/)"
                }
            },
            "required": [
                "$replaceWith"
            ],
            "type": "object"
        },
        "PipelineStage.Sample": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$sample": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "[`$sample` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/sample/)",
                    "properties": {
                        "size": {
                            "type": "number"
                        }
                    },
                    "required": [
                        "size"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "$sample"
            ],
            "type": "object"
        },
        "PipelineStage.Search": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$search": {
                    "additionalProperties": {},
                    "defaultProperties": [],
                    "description": "[`$search` reference](https://docs.atlas.mongodb.com/reference/atlas-search/query-syntax/)",
                    "properties": {
                        "highlight": {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "properties": {
                                "maxCharsToExamine": {
                                    "type": "number"
                                },
                                "maxNumPassages": {
                                    "type": "number"
                                },
                                "path": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "path"
                            ],
                            "type": "object"
                        },
                        "index": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "$search"
            ],
            "type": "object"
        },
        "PipelineStage.Set": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$set": {
                    "$ref": "#/definitions/Record<string,any>",
                    "description": "[`$set` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/set/)"
                }
            },
            "required": [
                "$set"
            ],
            "type": "object"
        },
        "PipelineStage.SetWindowFields": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$setWindowFields": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "[`$setWindowFields` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/setWindowFields/)",
                    "properties": {
                        "output": {
                            "$ref": "#/definitions/Record<string,{$addToSet?:any;$avg?:any;$count?:any;$first?:any;$last?:any;$max?:any;$min?:any;$push?:any;$stdDevPop?:any;$stdDevSamp?:any;$sum?:any;$covariancePop?:any;$covarianceSamp?:any;$derivative?:any;$expMovingAvg?:any;$integral?:any;$shift?:any;$denseRank?:any;$documentNumber?:any;$rank?:any;}&{window?:{documents?:[string|number,string|number];range?:[string|number,string|number];unit?:\"day\"|\"hour\"|\"minute\"|\"month\"|\"second\"|\"year\"|\"quarter\"|\"week\"|\"millisecond\";};}>"
                        },
                        "partitionBy": {},
                        "sortBy": {
                            "$ref": "#/definitions/Record<string,1|-1>"
                        }
                    },
                    "required": [
                        "output"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "$setWindowFields"
            ],
            "type": "object"
        },
        "PipelineStage.Skip": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$skip": {
                    "description": "[`$skip` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/skip/)",
                    "type": "number"
                }
            },
            "required": [
                "$skip"
            ],
            "type": "object"
        },
        "PipelineStage.Sort": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$sort": {
                    "$ref": "#/definitions/Record<string,1|-1|{$meta:\"textScore\";}>",
                    "description": "[`$sort` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/sort/)"
                }
            },
            "required": [
                "$sort"
            ],
            "type": "object"
        },
        "PipelineStage.SortByCount": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$sortByCount": {
                    "description": "[`$sortByCount` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/sortByCount/)"
                }
            },
            "required": [
                "$sortByCount"
            ],
            "type": "object"
        },
        "PipelineStage.UnionWith": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$unionWith": {
                    "anyOf": [
                        {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "properties": {
                                "coll": {
                                    "type": "string"
                                },
                                "pipeline": {
                                    "items": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/definitions/PipelineStage.AddFields"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Bucket"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.BucketAuto"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.CollStats"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Count"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Facet"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.GeoNear"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.GraphLookup"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Group"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.IndexStats"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Limit"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.ListSessions"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Lookup"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Match"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.PlanCacheStats"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Project"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Redact"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.ReplaceRoot"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.ReplaceWith"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Sample"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Search"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Set"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.SetWindowFields"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Skip"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Sort"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.SortByCount"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.UnionWith"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Unset"
                                            },
                                            {
                                                "$ref": "#/definitions/PipelineStage.Unwind"
                                            }
                                        ]
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "coll"
                            ],
                            "type": "object"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "[`$unionWith` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/unionWith/)"
                }
            },
            "required": [
                "$unionWith"
            ],
            "type": "object"
        },
        "PipelineStage.Unset": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$unset": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "[`$unset` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/unset/)"
                }
            },
            "required": [
                "$unset"
            ],
            "type": "object"
        },
        "PipelineStage.Unwind": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$unwind": {
                    "anyOf": [
                        {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "properties": {
                                "includeArrayIndex": {
                                    "type": "string"
                                },
                                "path": {
                                    "type": "string"
                                },
                                "preserveNullAndEmptyArrays": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "path"
                            ],
                            "type": "object"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "[`$unwind` reference](https://docs.mongodb.com/manual/reference/operator/aggregation/unwind/)"
                }
            },
            "required": [
                "$unwind"
            ],
            "type": "object"
        },
        "Record<string,(PipelineStage.AddFields|PipelineStage.Bucket|PipelineStage.BucketAuto|PipelineStage.Count|PipelineStage.GraphLookup|PipelineStage.Group|PipelineStage.Limit|PipelineStage.ListSessions|PipelineStage.Lookup|PipelineStage.Match|PipelineStage.Project|PipelineStage.Redact|PipelineStage.ReplaceRoot|PipelineStage.ReplaceWith|PipelineStage.Sample|PipelineStage.Search|PipelineStage.Set|PipelineStage.SetWindowFields|PipelineStage.Skip|PipelineStage.Sort|PipelineStage.SortByCount|PipelineStage.UnionWith|PipelineStage.Unset|PipelineStage.Unwind)[]>": {
            "additionalProperties": false,
            "defaultProperties": [],
            "type": "object"
        },
        "Record<string,1|-1>": {
            "additionalProperties": false,
            "defaultProperties": [],
            "type": "object"
        },
        "Record<string,1|-1|{$meta:\"textScore\";}>": {
            "additionalProperties": false,
            "defaultProperties": [],
            "type": "object"
        },
        "Record<string,any>": {
            "additionalProperties": false,
            "defaultProperties": [],
            "type": "object"
        },
        "Record<string,{$accumulator?:any;$addToSet?:any;$avg?:any;$count?:any;$first?:any;$last?:any;$max?:any;$mergeObjects?:any;$min?:any;$push?:any;$stdDevPop?:any;$stdDevSamp?:any;$sum?:any;}>": {
            "additionalProperties": false,
            "defaultProperties": [],
            "type": "object"
        },
        "Record<string,{$accumulator?:any;$addToSet?:any;$avg?:any;$count?:any;$first?:any;$last?:any;$max?:any;$mergeObjects?:any;$min?:any;$push?:any;$stdDevPop?:any;$stdDevSamp?:any;$sum?:any;}>_1": {
            "additionalProperties": false,
            "defaultProperties": [],
            "type": "object"
        },
        "Record<string,{$addToSet?:any;$avg?:any;$count?:any;$first?:any;$last?:any;$max?:any;$min?:any;$push?:any;$stdDevPop?:any;$stdDevSamp?:any;$sum?:any;$covariancePop?:any;$covarianceSamp?:any;$derivative?:any;$expMovingAvg?:any;$integral?:any;$shift?:any;$denseRank?:any;$documentNumber?:any;$rank?:any;}&{window?:{documents?:[string|number,string|number];range?:[string|number,string|number];unit?:\"day\"|\"hour\"|\"minute\"|\"month\"|\"second\"|\"year\"|\"quarter\"|\"week\"|\"millisecond\";};}>": {
            "additionalProperties": false,
            "defaultProperties": [],
            "type": "object"
        },
        "RootQuerySelector<Record<string,unknown>>": {
            "additionalProperties": {},
            "defaultProperties": [],
            "properties": {
                "$and": {
                    "items": {
                        "$ref": "#/definitions/FilterQuery<Record<string,unknown>>"
                    },
                    "type": "array"
                },
                "$comment": {
                    "type": "string"
                },
                "$nor": {
                    "items": {
                        "$ref": "#/definitions/FilterQuery<Record<string,unknown>>"
                    },
                    "type": "array"
                },
                "$or": {
                    "items": {
                        "$ref": "#/definitions/FilterQuery<Record<string,unknown>>"
                    },
                    "type": "array"
                },
                "$text": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "$caseSensitive": {
                            "type": "boolean"
                        },
                        "$diacriticSensitive": {
                            "type": "boolean"
                        },
                        "$language": {
                            "type": "string"
                        },
                        "$search": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "$search"
                    ],
                    "type": "object"
                },
                "$where": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Function"
                        },
                        {
                            "type": "string"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "SchemaDef": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "column": {
                    "$ref": "#/definitions/ColumnDef",
                    "description": "Configure the column for the table view in the CMS."
                },
                "default": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "properties": {
                                "code": {
                                    "enum": [
                                        "alphanumeric"
                                    ],
                                    "type": "string"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "required": [
                                "code",
                                "length"
                            ],
                            "type": "object"
                        },
                        {
                            "type": [
                                "string",
                                "number",
                                "boolean"
                            ]
                        }
                    ],
                    "description": "A default value to use for a new document.\n\nIf a string is provided, the string value will be used for every new\ndocument.\n\nIf a code specification is provided, a new code will be generated\nfor each new document."
                },
                "field": {
                    "$ref": "#/definitions/FieldDef",
                    "description": "Configure the way the field appears in the CMS."
                },
                "modifiable": {
                    "description": "Whether this field can be modified.",
                    "type": "boolean"
                },
                "public": {
                    "description": "Whether this field can be accessed without authentication.",
                    "type": "boolean"
                },
                "required": {
                    "description": "Whether this field is required.",
                    "type": "boolean"
                },
                "rule": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "Return an error to the client if the new value for this field\ndoes not match the provided regular expression.",
                    "properties": {
                        "message": {
                            "description": "The message to send if the input does not match the regular expression.",
                            "type": "string"
                        },
                        "regexp": {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "description": "A regular expression which the input must match.",
                            "properties": {
                                "flags": {
                                    "type": "string"
                                },
                                "pattern": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "flags",
                                "pattern"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "message",
                        "regexp"
                    ],
                    "type": "object"
                },
                "setter": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "description": "Automatically set the value of this field if a condition on the document is met.\nIn other words: if a document value matches the condition in this setter,\nset the value of this field to the specified value.\n\n_This only occurs after a document has been modified_.\n\n__Example:__\n```\n{\n   // check if the stage field equals 5.2 and the slug field does not exist\n   \"condition\": { \"$and\": [{ \"stage\": { \"$eq\": 5.2 } }, { \"slug\": { \"$exists\": false } }] },\n   // set the value to a slugified version of the name\n   \"value\": { \"slugify\": \"name\" }\n }\n```",
                    "properties": {
                        "condition": {
                            "anyOf": [
                                {
                                    "additionalProperties": false,
                                    "defaultProperties": [],
                                    "properties": {
                                        "$and": {
                                            "items": {
                                                "$ref": "#/definitions/Field"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "$and"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": false,
                                    "defaultProperties": [],
                                    "properties": {
                                        "$or": {
                                            "items": {
                                                "$ref": "#/definitions/Field"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "$or"
                                    ],
                                    "type": "object"
                                }
                            ],
                            "description": "The condition to be met. Uses a subset of MongoDB operators:\n\nComparison operators:\n- $gt (number)\n- $gte (number)\n- $lt (number)\n- $lte (number)\n- $eq (number | string)\n- $ne (number | string)\n\nElement operators:\n- $exists (boolean)\n\nLogical operators:\n- $and (array)\n- $or (array)\n\nLogical operators may only reference field keys at the top level."
                        },
                        "value": {
                            "anyOf": [
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                {
                                    "items": {
                                        "type": "number"
                                    },
                                    "type": "array"
                                },
                                {
                                    "items": {
                                        "type": "boolean"
                                    },
                                    "type": "array"
                                },
                                {
                                    "additionalProperties": false,
                                    "defaultProperties": [],
                                    "properties": {
                                        "separator": {
                                            "type": "string"
                                        },
                                        "slugify": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "slugify"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": false,
                                    "defaultProperties": [],
                                    "properties": {
                                        "code": {
                                            "enum": [
                                                "alphanumeric"
                                            ],
                                            "type": "string"
                                        },
                                        "length": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "length"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "type": [
                                        "string",
                                        "number",
                                        "boolean"
                                    ]
                                }
                            ],
                            "description": "The value to be set.\n\nBe sure that the set value matches the type of this field.\nValues can be strings, integers, floats, booleans, arrays of string,\narrays of integers, arrays of floats, or arrays of booleans.\n\nSpecial setter values can also be generated:\n\n- _Generated alphanumeric string_: `{ value: { code: 'alphanumeric', length: <length> }, ...rest }`\n- _Slug (string)_: `{ value: { slugify: <field-to-slugify> }, ...rest }`"
                        }
                    },
                    "required": [
                        "condition",
                        "value"
                    ],
                    "type": "object"
                },
                "strict": {
                    "type": "boolean"
                },
                "textSearch": {
                    "description": "Adds this field to the text search index, which is used for quickly\nsearch for text in the collection. Only include string fields.\n\n[Read about text indexes.](https://www.mongodb.com/docs/manual/core/link-text-indexes/)",
                    "type": "boolean"
                },
                "type": {
                    "anyOf": [
                        {
                            "items": [
                                {
                                    "enum": [
                                        "Boolean"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "enum": [
                                        "Date"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "enum": [
                                        "Number"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "enum": [
                                        "Float"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "enum": [
                                        "ObjectId"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "enum": [
                                        "String"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "enum": [
                                        "JSON"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "type": "string"
                                },
                                {
                                    "anyOf": [
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Boolean"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Date"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Number"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Float"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "ObjectId"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "String"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "JSON"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "enum": [
                                                "Boolean",
                                                "Date",
                                                "Float",
                                                "JSON",
                                                "Number",
                                                "ObjectId",
                                                "String"
                                            ],
                                            "type": "string"
                                        }
                                    ]
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        },
                        {
                            "enum": [
                                "Boolean",
                                "Date",
                                "Float",
                                "JSON",
                                "Number",
                                "ObjectId",
                                "String"
                            ],
                            "type": "string"
                        }
                    ],
                    "description": "The type of this field.\n\nIf the type is `'ObjectId'` or `['ObjectId']`, a type type can be provided\nso that the API knows which collection it references. This allows querying\nfields in the referenced collection. Otherwise, only the ObjectId is returned.\n\n__Examples:__\n\n```\n// an integer\n`{ type: 'Int', ...rest }`\n\n// an array of strings\n`{ type: ['String'], ...rest }`\n\n// an array of ObjectIds, but not connected to their referenced collection\n`{ type: ['ObjectId'], ...rest }`\n\n// an array of ObjectIds that reference documents in the User collection\n`{ type: ['[User]', ['ObjectId']], ...rest }`  // note the location of quotation marks\n```"
                },
                "unique": {
                    "description": "Whether this field must be unique.\n\n_This is validated by mongoose._",
                    "type": "boolean"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "SchemaDefType": {
            "additionalProperties": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/SchemaRef"
                    },
                    {
                        "$ref": "#/definitions/SchemaDef"
                    },
                    {
                        "$ref": "#/definitions/NestedSchemaDefType"
                    },
                    {
                        "items": [
                            {
                                "$ref": "#/definitions/SchemaDefType"
                            }
                        ],
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "array"
                    }
                ]
            },
            "defaultProperties": [],
            "type": "object"
        },
        "SchemaRef": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "by": {
                    "description": "The identifying field on the referenced collection.\nIt must match the `match` field from the current collection.",
                    "type": "string"
                },
                "column": {
                    "$ref": "#/definitions/ColumnDef",
                    "description": "Configure the column for the table view in the CMS."
                },
                "field": {
                    "description": "The field from the referenced collection document\nthat contains the value to be used for this field.",
                    "type": "string"
                },
                "fieldType": {
                    "anyOf": [
                        {
                            "items": [
                                {
                                    "enum": [
                                        "Boolean"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "enum": [
                                        "Date"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "enum": [
                                        "Number"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "enum": [
                                        "Float"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "enum": [
                                        "ObjectId"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "enum": [
                                        "String"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "enum": [
                                        "JSON"
                                    ],
                                    "type": "string"
                                }
                            ],
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "items": [
                                {
                                    "type": "string"
                                },
                                {
                                    "anyOf": [
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Boolean"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Date"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Number"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Float"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "ObjectId"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "String"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "JSON"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "enum": [
                                                "Boolean",
                                                "Date",
                                                "Float",
                                                "JSON",
                                                "Number",
                                                "ObjectId",
                                                "String"
                                            ],
                                            "type": "string"
                                        }
                                    ]
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        },
                        {
                            "enum": [
                                "Boolean",
                                "Date",
                                "Float",
                                "JSON",
                                "Number",
                                "ObjectId",
                                "String"
                            ],
                            "type": "string"
                        }
                    ],
                    "description": "The type of the field from the referenced collection.\nUse the same syntax as the type property defined\non the destination field."
                },
                "matches": {
                    "description": "The identifying field on the current collection.\nIt must match the `by` field from the referenced collection.",
                    "type": "string"
                },
                "model": {
                    "description": "The collection from which the data for this field comes.",
                    "type": "string"
                },
                "public": {
                    "description": "Whether this field can be accessed without authentication.",
                    "type": "boolean"
                }
            },
            "required": [
                "by",
                "field",
                "fieldType",
                "matches",
                "model"
            ],
            "type": "object"
        },
        "TiptapOptions": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "features": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "bold": {
                            "type": "boolean"
                        },
                        "bulletList": {
                            "type": "boolean"
                        },
                        "code": {
                            "type": "boolean"
                        },
                        "comment": {
                            "type": "boolean"
                        },
                        "fontFamilies": {
                            "items": {
                                "additionalProperties": false,
                                "defaultProperties": [],
                                "properties": {
                                    "disabled": {
                                        "type": "boolean"
                                    },
                                    "label": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "fontSizes": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "horizontalRule": {
                            "type": "boolean"
                        },
                        "italic": {
                            "type": "boolean"
                        },
                        "link": {
                            "type": "boolean"
                        },
                        "orderedList": {
                            "type": "boolean"
                        },
                        "pullQuote": {
                            "type": "boolean"
                        },
                        "strike": {
                            "type": "boolean"
                        },
                        "textStylePicker": {
                            "type": "boolean"
                        },
                        "trackChanges": {
                            "type": "boolean"
                        },
                        "underline": {
                            "type": "boolean"
                        },
                        "widgets": {
                            "additionalProperties": false,
                            "defaultProperties": [],
                            "properties": {
                                "photoWidget": {
                                    "type": "boolean"
                                },
                                "sweepwidget": {
                                    "type": "boolean"
                                },
                                "youtube": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "isHTMLkey": {
                    "type": "string"
                },
                "keys_article": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "authors": {
                            "type": "string"
                        },
                        "caption": {
                            "type": "string"
                        },
                        "categories": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "headline": {
                            "type": "string"
                        },
                        "photo_url": {
                            "type": "string"
                        },
                        "target_publish_at": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "authors",
                        "caption",
                        "categories",
                        "description",
                        "headline",
                        "photo_url",
                        "target_publish_at"
                    ],
                    "type": "object"
                },
                "layouts": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "options": {
                            "items": {
                                "additionalProperties": false,
                                "defaultProperties": [],
                                "properties": {
                                    "label": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "label",
                                    "value"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "key",
                        "options"
                    ],
                    "type": "object"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "features",
                "type"
            ],
            "type": "object"
        },
        "{$accumulator?:any;$addToSet?:any;$avg?:any;$count?:any;$first?:any;$last?:any;$max?:any;$mergeObjects?:any;$min?:any;$push?:any;$stdDevPop?:any;$stdDevSamp?:any;$sum?:any;}": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "$accumulator": {},
                "$addToSet": {},
                "$avg": {},
                "$count": {},
                "$first": {},
                "$last": {},
                "$max": {},
                "$mergeObjects": {},
                "$min": {},
                "$push": {},
                "$stdDevPop": {},
                "$stdDevSamp": {},
                "$sum": {}
            },
            "type": "object"
        }
    },
    "properties": {
        "actionAccess": {
            "$ref": "#/definitions/CollectionPermissions"
        },
        "by": {
            "anyOf": [
                {
                    "items": [
                        {
                            "type": "string"
                        },
                        {
                            "anyOf": [
                                {
                                    "items": [
                                        {
                                            "enum": [
                                                "Boolean"
                                            ],
                                            "type": "string"
                                        }
                                    ],
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                {
                                    "items": [
                                        {
                                            "enum": [
                                                "Date"
                                            ],
                                            "type": "string"
                                        }
                                    ],
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                {
                                    "items": [
                                        {
                                            "enum": [
                                                "Number"
                                            ],
                                            "type": "string"
                                        }
                                    ],
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                {
                                    "items": [
                                        {
                                            "enum": [
                                                "Float"
                                            ],
                                            "type": "string"
                                        }
                                    ],
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                {
                                    "items": [
                                        {
                                            "enum": [
                                                "ObjectId"
                                            ],
                                            "type": "string"
                                        }
                                    ],
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                {
                                    "items": [
                                        {
                                            "enum": [
                                                "String"
                                            ],
                                            "type": "string"
                                        }
                                    ],
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                {
                                    "items": [
                                        {
                                            "enum": [
                                                "JSON"
                                            ],
                                            "type": "string"
                                        }
                                    ],
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                {
                                    "items": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "anyOf": [
                                                {
                                                    "items": [
                                                        {
                                                            "enum": [
                                                                "Boolean"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "maxItems": 1,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                {
                                                    "items": [
                                                        {
                                                            "enum": [
                                                                "Date"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "maxItems": 1,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                {
                                                    "items": [
                                                        {
                                                            "enum": [
                                                                "Number"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "maxItems": 1,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                {
                                                    "items": [
                                                        {
                                                            "enum": [
                                                                "Float"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "maxItems": 1,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                {
                                                    "items": [
                                                        {
                                                            "enum": [
                                                                "ObjectId"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "maxItems": 1,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                {
                                                    "items": [
                                                        {
                                                            "enum": [
                                                                "String"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "maxItems": 1,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                {
                                                    "items": [
                                                        {
                                                            "enum": [
                                                                "JSON"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "maxItems": 1,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                {
                                                    "enum": [
                                                        "Boolean",
                                                        "Date",
                                                        "Float",
                                                        "JSON",
                                                        "Number",
                                                        "ObjectId",
                                                        "String"
                                                    ],
                                                    "type": "string"
                                                }
                                            ]
                                        }
                                    ],
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array"
                                },
                                {
                                    "enum": [
                                        "Boolean",
                                        "Date",
                                        "Float",
                                        "JSON",
                                        "Number",
                                        "ObjectId",
                                        "String"
                                    ],
                                    "type": "string"
                                }
                            ]
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                },
                {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "many": {
                            "items": [
                                {
                                    "type": "string"
                                },
                                {
                                    "anyOf": [
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Boolean"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Date"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Number"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Float"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "ObjectId"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "String"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "JSON"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "anyOf": [
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "Boolean"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "Date"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "Number"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "Float"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "ObjectId"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "String"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "JSON"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "enum": [
                                                                "Boolean",
                                                                "Date",
                                                                "Float",
                                                                "JSON",
                                                                "Number",
                                                                "ObjectId",
                                                                "String"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "maxItems": 2,
                                            "minItems": 2,
                                            "type": "array"
                                        },
                                        {
                                            "enum": [
                                                "Boolean",
                                                "Date",
                                                "Float",
                                                "JSON",
                                                "Number",
                                                "ObjectId",
                                                "String"
                                            ],
                                            "type": "string"
                                        }
                                    ]
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        },
                        "one": {
                            "items": [
                                {
                                    "type": "string"
                                },
                                {
                                    "anyOf": [
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Boolean"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Date"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Number"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "Float"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "ObjectId"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "String"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "enum": [
                                                        "JSON"
                                                    ],
                                                    "type": "string"
                                                }
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        {
                                            "items": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "anyOf": [
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "Boolean"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "Date"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "Number"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "Float"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "ObjectId"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "String"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "items": [
                                                                {
                                                                    "enum": [
                                                                        "JSON"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "maxItems": 1,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        {
                                                            "enum": [
                                                                "Boolean",
                                                                "Date",
                                                                "Float",
                                                                "JSON",
                                                                "Number",
                                                                "ObjectId",
                                                                "String"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "maxItems": 2,
                                            "minItems": 2,
                                            "type": "array"
                                        },
                                        {
                                            "enum": [
                                                "Boolean",
                                                "Date",
                                                "Float",
                                                "JSON",
                                                "Number",
                                                "ObjectId",
                                                "String"
                                            ],
                                            "type": "string"
                                        }
                                    ]
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        }
                    },
                    "required": [
                        "many",
                        "one"
                    ],
                    "type": "object"
                }
            ],
            "description": "The accessor for retrieving one document or many documents.\n\nThe default accessor is '_id' of with a `SchemaType` of 'ObjectId`.\n\nProvide a string accessor if it is the same for getting one document\nor many documents. (e.g. `['code', 'Number']`).\n\nProvide an object with keys `one` and `many` to specify different\naccessors for retrieving one document vs many documents.\n\nAn 's' will always be appended to the name of the accessor when selecting\nmany documents. The type when selecting many documents will be an\narray of the specified type."
        },
        "canPublish": {
            "description": "Whether documents in this collection can be marked as published.\nThis adds extra people and timestamp fields for track who published\na document and when it was published.",
            "type": "boolean"
        },
        "customMutations": {
            "description": "Create custom mutations.",
            "items": {
                "additionalProperties": false,
                "defaultProperties": [],
                "properties": {
                    "action": {
                        "additionalProperties": false,
                        "defaultProperties": [],
                        "description": "The action this query does.\n\nSupported actions:\n\n`$inc`: pass `{ inc: [fieldName, type] }`, where type matches the type of the field in the schema (NO !).",
                        "properties": {
                            "inc": {
                                "items": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array"
                            }
                        },
                        "required": [
                            "inc"
                        ],
                        "type": "object"
                    },
                    "description": {
                        "description": "The description of the mutation. Be sure to use a helpful description\nso someone else can know what this mutation does. Can be seen in\nGraphQL introspection.",
                        "type": "string"
                    },
                    "name": {
                        "description": "camelCase name of the custom mutation.\n\nThe mutation name will be capitalized and the name of the collection\nwill be prepended to the query name.\n\nFor example, `'stageCounts'` becomes `'satireStageCounts'`.",
                        "type": "string"
                    },
                    "public": {
                        "description": "Whether the query can be used without authentication.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "action",
                    "description",
                    "name"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "customQueries": {
            "description": "Create custom queries based on MongoDB aggregation pipelines.",
            "items": {
                "additionalProperties": false,
                "defaultProperties": [],
                "properties": {
                    "accepts": {
                        "description": "A string list of arguments for the query.\n\nExample: `name: String!, slug: String`",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the query. Be sure to use a helpful description\nso someone else can know what this query does. Can be seen in\nGraphQL introspection.",
                        "type": "string"
                    },
                    "name": {
                        "description": "camelCase name of the custom query.\n\nThe query name will be capitalized and the name of the collection\nwill be prepended to the query name.\n\nFor example, `'stageCounts'` becomes `'satireStageCounts'`.",
                        "type": "string"
                    },
                    "path": {
                        "description": "Choose a specific path from the pipeline result to send to clients.\nPowered by object-path.",
                        "type": "string"
                    },
                    "pipeline": {
                        "description": "A MongoDB aggregation pipeline.\n[Pipeline stage reference](https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/#aggregation-pipeline-stages)",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/PipelineStage.AddFields"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Bucket"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.BucketAuto"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.CollStats"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Count"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Facet"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.GeoNear"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.GraphLookup"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Group"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.IndexStats"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Limit"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.ListSessions"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Lookup"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Match"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Merge"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Out"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.PlanCacheStats"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Project"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Redact"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.ReplaceRoot"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.ReplaceWith"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Sample"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Search"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Set"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.SetWindowFields"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Skip"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Sort"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.SortByCount"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.UnionWith"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Unset"
                                },
                                {
                                    "$ref": "#/definitions/PipelineStage.Unwind"
                                }
                            ],
                            "description": "[Stages reference](https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/#aggregation-pipeline-stages)"
                        },
                        "type": "array"
                    },
                    "public": {
                        "description": "Whether the query can be used without authentication.",
                        "type": "boolean"
                    },
                    "returns": {
                        "description": "An un-named object type that represents the returned values from the\npipeline.\n\nExample: `{ _id: Float!, count: Int! }`\n\nIf you want to specify a type that already exists, provide it\nwithout curly brackets.",
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "name",
                    "pipeline",
                    "returns"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "name": {
            "description": "The name of this collection.",
            "type": "string"
        },
        "options": {
            "additionalProperties": false,
            "defaultProperties": [],
            "properties": {
                "disableActionAccessQuery": {
                    "type": "boolean"
                },
                "disableCreateMutation": {
                    "type": "boolean"
                },
                "disableCreatedSubscription": {
                    "type": "boolean"
                },
                "disableDeleteMutation": {
                    "type": "boolean"
                },
                "disableDeletedSubscription": {
                    "type": "boolean"
                },
                "disableFindManyQuery": {
                    "type": "boolean"
                },
                "disableFindOneQuery": {
                    "type": "boolean"
                },
                "disableHideMutation": {
                    "type": "boolean"
                },
                "disableLockMutation": {
                    "type": "boolean"
                },
                "disableModifiedSubscription": {
                    "type": "boolean"
                },
                "disableModifyMutation": {
                    "type": "boolean"
                },
                "disablePublicFindManyQuery": {
                    "type": "boolean"
                },
                "disablePublicFindOneBySlugQuery": {
                    "type": "boolean"
                },
                "disablePublicFindOneQuery": {
                    "type": "boolean"
                },
                "disablePublishMutation": {
                    "type": "boolean"
                },
                "disableWatchMutation": {
                    "type": "boolean"
                },
                "mandatoryWatchers": {
                    "description": "Keys of fields that contain ObjectIDs of the users who\nmust always receive notification emails when documents\nin this collection change via Cristata.\n\nThe keys may reference fields that are arrays or single\nvalues.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nameField": {
                    "type": "string"
                },
                "previewUrl": {
                    "type": "string"
                },
                "watcherNotices": {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "fields": {
                            "items": {
                                "additionalProperties": false,
                                "defaultProperties": [],
                                "properties": {
                                    "label": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "numMap": {
                                        "additionalProperties": false,
                                        "patternProperties": {
                                            "^[0-9.]+$": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "label",
                                    "name"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "stageField": {
                            "type": "string"
                        },
                        "stageMap": {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9.]+$": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "subjectField": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "fields",
                        "stageField",
                        "stageMap",
                        "subjectField"
                    ],
                    "type": "object"
                }
            },
            "type": "object"
        },
        "publicRules": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "defaultProperties": [],
                    "properties": {
                        "filter": {
                            "additionalProperties": {},
                            "defaultProperties": [],
                            "description": "MongoDB filter to sort out documents that need to remain private.\n\nUses MongoDB queries: https://www.mongodb.com/docs/manual/tutorial/query-documents/\n\n_Use `{}` for no filter._",
                            "properties": {
                                "$and": {
                                    "items": {
                                        "$ref": "#/definitions/FilterQuery<Record<string,unknown>>"
                                    },
                                    "type": "array"
                                },
                                "$comment": {
                                    "type": "string"
                                },
                                "$nor": {
                                    "items": {
                                        "$ref": "#/definitions/FilterQuery<Record<string,unknown>>"
                                    },
                                    "type": "array"
                                },
                                "$or": {
                                    "items": {
                                        "$ref": "#/definitions/FilterQuery<Record<string,unknown>>"
                                    },
                                    "type": "array"
                                },
                                "$text": {
                                    "additionalProperties": false,
                                    "defaultProperties": [],
                                    "properties": {
                                        "$caseSensitive": {
                                            "type": "boolean"
                                        },
                                        "$diacriticSensitive": {
                                            "type": "boolean"
                                        },
                                        "$language": {
                                            "type": "string"
                                        },
                                        "$search": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "$search"
                                    ],
                                    "type": "object"
                                },
                                "$where": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/definitions/Function"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            },
                            "type": "object"
                        },
                        "slugDateField": {
                            "description": "The field to use to ensure that the publicBySlug query returns the\ncorrect slug.\n\nThis is usually `'timestamps.published_at'`.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "filter"
                    ],
                    "type": "object"
                },
                {
                    "enum": [
                        false
                    ],
                    "type": "boolean"
                }
            ],
            "description": "Specify rules for public queries.\n\nUse `false` to disallow public queries."
        },
        "schemaDef": {
            "$ref": "#/definitions/SchemaDefType",
            "description": "The definition for the schema. GraphQL type definitions and the mongoose schema are\ngenerated from this."
        },
        "withPermissions": {
            "description": "Whether this collection allows setting permissions for each document\nin addition to global collection permissions.",
            "type": "boolean"
        },
        "withSubscription": {
            "description": "Whether a subscription should be provided for listening to\ndocument creations, modifications, and deletions in this collection.",
            "type": "boolean"
        }
    },
    "required": [
        "actionAccess",
        "canPublish",
        "name",
        "publicRules",
        "schemaDef",
        "withPermissions",
        "withSubscription"
    ],
    "type": "object"
}

