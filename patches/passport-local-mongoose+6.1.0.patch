diff --git a/node_modules/passport-local-mongoose/index.js b/node_modules/passport-local-mongoose/index.js
index f366fa2..d0cf9c0 100644
--- a/node_modules/passport-local-mongoose/index.js
+++ b/node_modules/passport-local-mongoose/index.js
@@ -297,8 +297,10 @@ module.exports = function(schema, options) {
     return query;
   };
 
-  schema.statics.createStrategy = function() {
-    return new LocalStrategy(options, this.authenticate());
+  schema.statics.createStrategy = function({ tenant }) {
+    // provide tenant to the local strategy so it can name the strategy (local-tenant)
+    // so that each tenant has its own strategy that is connected to the tenant's database
+    return new LocalStrategy({ ...options, tenant }, this.authenticate());
   };
 };
 
diff --git a/node_modules/passport-local-mongoose/lib/authenticate.js b/node_modules/passport-local-mongoose/lib/authenticate.js
index 7acea78..5ef85a9 100644
--- a/node_modules/passport-local-mongoose/lib/authenticate.js
+++ b/node_modules/passport-local-mongoose/lib/authenticate.js
@@ -48,15 +48,18 @@ function authenticate(user, password, options, cb) {
       if (options.limitAttempts) {
         user.set(options.lastLoginField, Date.now());
         user.set(options.attemptsField, 0);
-        user.save(function(saveErr, user) {
-          if (saveErr) {
-            return cb(saveErr);
-          }
-          return cb(null, user);
-        });
-      } else {
-        return cb(null, user);
       }
+      // add local method to the user's methods
+      user.set('methods', Array.from(new Set([...(user.methods || []), 'local'])));
+      user.save(function(saveErr, user) {
+        if (saveErr) {
+          return cb(saveErr);
+        }
+        // include the tenant name so that passport can deserialize the user by matching it
+        // in the correct database
+        // include the provider name so passport knows which provider was used
+        return cb(null, {...user.toObject(), provider: 'local', tenant: user.db.name});
+      });
     } else {
       if (options.limitAttempts) {
         user.set(options.lastLoginField, Date.now());
